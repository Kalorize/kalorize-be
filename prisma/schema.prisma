// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique @db.VarChar(255)
  password      String          @db.Char(60)
  gender        Gender?
  weight        Float?
  picture       String?
  age           Int?
  height        Float?
  activity      Activity?
  target        Target?
  Otp           Otp?
  foodHistory   Food_history[]
}

enum Gender {
  MALE
  FEMALE
}

enum Activity {
  EASY
  MEDIUM
  HARD
  EXTREME
}

enum Target {
  REDUCE_WEIGHT
  INCREASE_MUSCLE
  BE_HEALTHY
}

model Otp {
  user      User      @relation(fields: [userEmail], references: [email])
  id        Int       @id @default(autoincrement())
  userEmail String    @unique
  code      String
  valid     Boolean   @default(false)
  chance    Int?
  expired   DateTime // batas waktu verifikasi
  lifetime  DateTime? // umur dari otp yang valid
}

model Food {
  RecipeId                Int           @id
  Name                    String
  CookTime                String
  PrepTime                String
  TotalTime               String
  RecipeIngredientParts   String
  Calories                Float
  FatContent              Float
  SaturatedFatContent     Float
  CholesterolContent      Float
  SodiumContent           Float
  CarbohydrateContent     Float
  FiberContent            Float
  SugarContent            Float
  ProteinContent          Float
  RecipeInstructions      String
  ImageUrl                String
  breakfast               Food_history[] @relation("breakfast")
  lunch                   Food_history[] @relation("lunch")
  dinner                  Food_history[] @relation("dinner")
}

model Food_history {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [id])
  breakfast     Food      @relation("breakfast", fields: [breakfastId], references: [RecipeId])
  breakfastId   Int       
  lunch         Food      @relation("lunch", fields: [lunchId], references: [RecipeId])
  lunchId       Int       
  dinner        Food      @relation("dinner", fields: [dinnerId], references: [RecipeId])
  dinnerId      Int       
  userId        Int       
  date          String  
}